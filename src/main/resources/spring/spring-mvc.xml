<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    开启SpringMVC注解模式，可以使用@RequestMapping，@PathVariable，@ResponseBody等
    对静态资源处理，如js，css，jpg等
    配置jsp 显示ViewResolver，例如在controller中某个方法返回一个string类型的”login”，实际上会返回”/WEB-INF/login.jsp”
    扫描web层 @Controller
    -->
    <!-- 配置注解驱动-->
    <mvc:annotation-driven/><!--静态资源访问-->
    <!--<mvc:default-servlet-handler/>&lt;!&ndash;视图解析器&ndash;&gt;-->
    <!-- 配置包扫描器 -->
    <!-- 具体controller包的路径取决于你新建的java代码的controller层包  -->
    <context:component-scan base-package="team.edge.controller"/>


    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="prefix" value="/"/>-->
    <!--<property name="suffix" value=".html"/>-->
    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
    <!--</bean>-->

    <!--映射静态资源-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/layer/**" location="/layer/"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <!--测试路径-->
    <mvc:resources mapping="/testPage/*.html" location="/testPage/"/>

    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="resourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--在这里配置国际化-->
    <!--读取配置文件-->
    <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource">
        <property name="basenames">
            <list>
                <value>messages.index</value>
                <value>messages.cart</value>
                <value>messages.detail</value>
                <value>messages.error</value>
                <value>messages.head</value>
                <value>messages.index</value>
                <value>messages.login</value>
                <value>messages.orderDetail</value>
                <value>messages.register</value>
                <value>messages.user</value>
            </list>
        </property>
        <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

    <!--实现消息国际化-->
    <bean class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" id="localeResolver"/>

    <!--&lt;!&ndash; springmvc提供的简单异常处理器 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--&lt;!&ndash; 定义默认的异常处理页面 &ndash;&gt;-->
    <!--<property name="defaultErrorView" value="/error"/>-->
    <!--&lt;!&ndash; 定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception &ndash;&gt;-->
    <!--<property name="exceptionAttribute" value="ex"/>-->
    <!--</bean>-->

</beans>